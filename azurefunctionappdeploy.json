{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.13.1.58284",
      "templateHash": "218949941053621418"
    }
  },
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "TestFunctionApp0620",
      "metadata": {
        "description": "The name of the Azure Function app."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location into which the resources should be deployed."
      }
    },
    "functionWorkerRuntime": {
      "type": "string",
      "defaultValue": "node",
      "allowedValues": [
        "dotnet",
        "node",
        "python",
        "java"
      ],
      "metadata": {
        "description": "The language worker runtime to load in the function app."
      }
    },
    "functionPlanOS": {
      "type": "string",
      "defaultValue": "Windows",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Specifies the OS used for the Azure Function hosting plan."
      }
    },
    "functionAppPlanSku": {
      "type": "string",
      "defaultValue": "EP1",
      "allowedValues": [
        "EP1",
        "EP2",
        "EP3"
      ],
      "metadata": {
        "description": "Specifies the Azure Function hosting plan SKU."
      }
    },
    "functionAppPlanName": {
      "type": "string",
      "defaultValue": "[format('plan-{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the Azure Function hosting plan."
      }
    },
    "functionStorageAccountName": {
      "type": "string",
      "defaultValue": "[format('st{0}', uniqueString(resourceGroup().id))]",
      "metadata": {
        "description": "The name of the backend Azure storage account used by the Azure Function app."
      }
    },
    "vnetName": {
      "defaultValue": "/subscriptions/<subscriptionID>/resourceGroups/<resource-group>/providers/Microsoft.Network/virtualNetworks/<v-net>",
      "type": "String",
      "metadata": {
        "description": "The name of the virtual network for virtual network integration."
      }
    },
    "functionSubnetName": {
      "type": "string",
      "defaultValue": "snet-func",
      "metadata": {
        "description": "The name of the virtual network subnet to be associated with the Azure Function app."
      }
    },
    "linuxFxVersion": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Only required for Linux app to represent runtime stack in the format of 'runtime|runtimeVersion'. For example: 'python|3.9'"
      }
    }
  },
  "variables": {
    "functionContentShareName": "function-content-share",
    "isReserved": "[if(equals(parameters('functionPlanOS'), 'Linux'), true(), false())]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('functionStorageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "Standard_LRS"
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "isNfsV3Enabled": false,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true,
        "allowSharedKeyAccess": true,
        "isHnsEnabled": false,
        "networkAcls": {
          "resourceAccessRules": [],
          "bypass": "AzureServices",
          "virtualNetworkRules": [
            {
              "id": "[concat(parameters('vnetName'), '/subnets/<subnet-name>')]",
              "action": "Allow",
              "state": "Succeeded"
            }
          ],
          "ipRules": [],
          "defaultAction": "Deny"
        },
        "supportsHttpsTrafficOnly": true,
        "encryption": {
          "services": {
            "file": {
              "keyType": "Account",
              "enabled": true
            },
            "blob": {
              "keyType": "Account",
              "enabled": true
            }
          },
          "keySource": "Microsoft.Storage"
        },
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/default/{1}', parameters('functionStorageAccountName'), variables('functionContentShareName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppPlanName')]",
      "location": "[parameters('location')]",
      "sku": {
        "tier": "ElasticPremium",
        "name": "[parameters('functionAppPlanSku')]",
        "size": "[parameters('functionAppPlanSku')]",
        "family": "EP"
      },
      "kind": "elastic",
      "properties": {
        "maximumElasticWorkerCount": 20,
        "reserved": "[variables('isReserved')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "kind": "[if(variables('isReserved'), 'functionapp,linux', 'functionapp')]",
      "properties": {
        "reserved": "[variables('isReserved')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppPlanName'))]",
        "vnetName": "<V-NET_ID>_<subnet-name>",
        "vnetRouteAllEnabled": true,
        "virtualNetworkSubnetId": "[concat(parameters('vnetName'), '/subnets/snet-func')]",
        "siteConfig": {
          "functionsRuntimeScaleMonitoringEnabled": true,
          "linuxFxVersion": "[if(variables('isReserved'), parameters('linuxFxVersion'), json('null'))]",
          "appSettings": [
            {
              "name": "AzureWebJobsStorage",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('functionStorageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
              "value": "[format('DefaultEndpointsProtocol=https;AccountName={0};AccountKey={1}', parameters('functionStorageAccountName'), listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName')), '2022-05-01').keys[0].value)]"
            },
            {
              "name": "WEBSITE_CONTENTSHARE",
              "value": "[variables('functionContentShareName')]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "[parameters('functionWorkerRuntime')]"
            },
            {
              "name": "WEBSITE_NODE_DEFAULT_VERSION",
              "value": "~14"
            },
            {
              "name": "WEBSITE_VNET_ROUTE_ALL",
              "value": "1"
            },
            {
              "name": "WEBSITE_CONTENTOVERVNET",
              "value": "1"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('functionAppPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('functionStorageAccountName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', split(format('{0}/default/{1}', parameters('functionStorageAccountName'), variables('functionContentShareName')), '/')[0], split(format('{0}/default/{1}', parameters('functionStorageAccountName'), variables('functionContentShareName')), '/')[1], split(format('{0}/default/{1}', parameters('functionStorageAccountName'), variables('functionContentShareName')), '/')[2])]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/virtualNetworkConnections",
      "apiVersion": "2022-09-01",
      "name": "[concat(parameters('functionAppName'), '/<V-NET_ID>_<subnet-name>')]",
      "location": "Central US",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "vnetResourceId": "[concat(parameters('vnetName'), '/subnets/<subnet-name>')]",
        "isSwift": true
      }
    }
  ]
}
